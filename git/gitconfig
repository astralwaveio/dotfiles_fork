[user]
	name = pseudoyu
	email = pseudoyu@connect.hku.hk
	useConfigOnly = true
[core]
	excludesfile = ~/.gitignore_global
	editor = code --wait
	pager = delta
	quotepath = off
    ignorecase = false
[init]
	defaultBranch = master
[commit]
	gpgsign = true
[tag]
	forceSignAnnotated = true
[push]
	default = current
	followTags = true
[pull]
    rebase = true
[remote "origin"]
	prune = true
[merge]
    log = true
[color]
	ui = true
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[delta]
    features = decorations
[delta "decorations"]
    commit-decoration-style = 232 130 box
    commit-style = 232 bold italic 130
    dark = true
    file-added-label = [+]
    file-copied-label = [C]
    file-decoration-style = yellow ul
    file-modified-label = [M]
    file-removed-label = [-]
    file-renamed-label = [R]
    file-style = yellow
    hunk-header-decoration-style = box blue
    hunk-header-file-style = bold reverse purple
    hunk-header-line-number-style = bold blue
    hunk-header-style = line-number
    # the following is from --diff-so-fancy emulation
    minus-style                   = bold red
    minus-non-emph-style          = bold red
    minus-emph-style              = bold red 52
    minus-empty-line-marker-style = normal "#3f0001"
    zero-style                    = normal
    plus-style                    = bold green
    plus-non-emph-style           = bold green
    plus-emph-style               = bold green 22
    plus-empty-line-marker-style  = normal "#002800"
[interactive]
    diffFilter = delta --color-only --features=interactive
[url "git@github.com:"]
    insteadOf = "gh:"
[filter "media"]
    required = true
    clean = git media clean %f
    smudge = git media smudge %f
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
	process = git-lfs filter-process
[hub]
    protocol = https
[github]
	user = pseudoyu
[diff]
    tool = nvimdiff
[difftool "nvimdiff"]
	cmd = nvim -d \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "nvimdiff"]
	cmd = nvim -d \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[alias]
    new = checkout -b
    a = "!git status --short | peco | awk '{print $2}' | xargs git add"
    d = diff
	co = checkout
    com = checkout master
    ci = commit -a -v
    cm = commit -m 
    ca = commit -a
    amd= commit --amend --no-edit
    ps = "!git push origin $(git rev-parse --abbrev-ref HEAD)"
    pl = "!git pull origin $(git rev-parse --abbrev-ref HEAD)"
    st = !echo 'untracked' && \
		git ls-files . --exclude-standard --others && \
		echo && \
		echo 'unstaged' && \
		git diff --stat && \
		echo '\nstaged' &&  \
		git diff --cached --stat
    sts = status
	br = branch
    ba = branch -a
    bm = branch --merged
    bn = branch --no-merged
    rc = rebase --continue
	mc = merge --continue
    d = !git branch | fzf | xargs git br -d
	dd = !git branch | fzf | xargs git br -D
	dr = !git branch -r | fzf | xargs | sed -e 's/^origin\\///' | xargs -I {} git push origin :{}
    df = "!git hist | peco | awk '{print $2}' | xargs -I {} git diff {}^ {}"
    hist = log --pretty=format:\"%Cgreen%h %Creset%cd %Cblue[%cn] %Creset%s%C(yellow)%d%C(reset)\" --graph --date=relative --decorate --all
    llog = log --graph --name-status --pretty=format:\"%C(red)%h %C(reset)(%cd) %C(green)%an %Creset%s %C(yellow)%d%Creset\" --date=relative
    ls = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	ll = log --graph --stat --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	last = log -1
	lg = log \
        --all \
        --graph \
        --abbrev-commit \
        --date=iso \
        --topo-order \
        --decorate \
        --format=format:'%C(magenta)%h%C(reset) -%C(yellow)%d%C(reset) %s %C(dim magenta)(%ar)%C(reset) %C(dim white)- %an%C(reset)'
    l = log \
        --graph \
        --abbrev-commit \
        --date=iso \
        --topo-order \
        --decorate \
        --format=format:'%C(magenta)%h%C(reset) - %C(dim magenta)%ad%C(reset) %C(yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim magenta)%ar%C(reset) %C(dim white)- %an <%ae>%C(reset)'
    lol = log --graph --decorate --abbrev-commit --pretty=format
    open = "!hub browse"
    type = cat-file -t
    dump = cat-file -p
    find = "!f() { git log --pretty=format:\"%h %cd [%cn] %s%d\" --date=relative -S'pretty' -S\"$@\" | peco | awk '{print $1}' | xargs -I {} git diff {}^ {}; }; f"
    # edit conflicted file on merge
    edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
    # add conflicted file on merge
    add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
    tags = tag -n --sort=v:refname -l
    tags-v = tag -n99 --sort=v:refname -l
	# NOTE Dangerous, use with caution
    undopush = push -f origin HEAD^:master
    undocommit = reset --soft HEAD^
    search = "!f() { git log -p -G$1 --all; }; f"
    searchcommit = "!f() { git log -G$1 --all; }; f"
    searchmessage = "!f() { git log --grep=$1; }; f"
    filehistory = "!f() { git log --follow -p -- $1; }; f"
    branchgraph = log --all --graph --decorate --oneline --simplify-by-decoration
    ls-merged = ! git branch --merged | grep -Ev '[*\\s]* (master|develop)$'
    rm-merged = ! git branch --merged | grep -Ev '[*\\s]* (master|develop)$' | xargs -n 1 git branch -d
    ls-merged-remote = ! git branch --remote --merged | grep origin | grep -Ev '>|master|develop' | xargs -L1 | cut -d'/' -f2-
    rm-merged-remote = ! git branch --remote --merged | grep origin | grep -Ev '>|master|develop' | xargs -L1 | cut -d'/' -f2- | xargs -L 1 git push origin --delete
    prune-origin = remote prune origin
    lscrap = ls-files --other --exclude-standard --directory
    stash-all = stash save --include-untracked
    branchupdates = for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'